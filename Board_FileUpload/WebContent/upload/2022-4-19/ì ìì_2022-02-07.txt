원인   
반복문을 통하여 오른차순으로 정렬해야 하며 입력받은 정수의 총합을 출력해야한다.

첫번째 문제점 sum총합의 계산문제

for (int i = 0; i < 5; i++) {​

System.out.print((i + 1) + "번째 숫자 입력 : ");

arr[i] = scanner.nextInt();

sum = arr[i];

}
해설)
입력받는 반복문을 통해  5~1까지의 5개의 값을 입력받게 된다.
arr[0] = 5
arr[1] = 4
arr[2] = 3
arr[3] = 2
arr[4] = 1
배열의 인덱스는 0부터 시작하여 0~4 즉 5개의 인덱스 값을 가지게 된다.
해당 반복문을 통해야 입력받은 정수의 총합을 계산하여야 한다.
하지만 sum = arr[i]; 반복문을 통해 반복할 때마다 sum이라는 변수에는 배열에 입력되는 수가 반복할 때마다
저장되어 최종적으로 시행되는 마지막 반복구분에 저장된 배열값 arr[4] = 1이라는 정수가 sum에저장된다. 
조치방안) 
sum = arr[i];를 수정해야 할 필요성이 있다.



두번째 문제점 비교 반복문 내부 조건식 오류
for (int i = 0; i < arr.length; i++) {

for (int j = 0; j < arr.length - 1 - i; j++) {

if (arr[j] < arr[j + 1]) {

int temp = arr[j];

arr[j] = arr[j + 1];

arr[j + 1] = temp;
}
}
}

반복문과 증감연산자를 통해 배열의 인덱스의 현재 인덱스와 그 다음의 인덱스를 비교하는 중첩반복문이 
작성되어 있다.
해당하는 반복문을 통해 코드를 실행할 경우
 if (arr[j] < arr[j + 1]) 조건문을 통해 
첫번째 실행으로 arr[0]=5와 arr[1]=4를 비교하게 되는데 오름차순으로 정렬하기 위해서는 첫번째 인덱스의
배열에 더 작은 arr[0]=4가 들어와야 정상이다. 
하지만 (arr[j] < arr[j + 1]) 조건문은 arr[0]<arr[1]즉
다음에 오는 배열의 값이 더 클경우 배열의 값을 현재 인덱스와 증가한 인덱스의 값을 바꾸는 조건문이다.
해당 조건문으로 반복문을 실행할 경우 5 4 3 2 1 과 같은 내림차순의 형태로 출력이 된다. 
조치방안) ​
이를 해결하기 위해  충첩 반복문구에 있는 if (arr[j] < arr[j + 1]) 조건문을 수정하여야 한다.​


조치내용   
첫번째 문제점 sum총합의 계산문제



for (int i = 0; i < 5; i++) {


System.out.print((i + 1) + "번째 숫자 입력 : ");

arr[i] = scanner.nextInt();

sum = arr[i]; >>>변경 sum+=arr[i]; or sum = sum+arr[i];

}​


두번째 문제점 비교 반복문 내부 조건식 오류

for (int i = 0; i < arr.length; i++) {

for (int j = 0; j < arr.length - 1 - i; j++) {

if (arr[j] < arr[j + 1]) { >>>변경 if(arr[j]>arr[j+1])

int temp = arr[j];

arr[j] = arr[j + 1];

arr[j + 1] = temp;
}
}
}



예상 출력

정렬 결과 : 1 2 3 4 5 

입력한 수의 총 합은 : 15


















